# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          # Install prutil
          pip install prancer_cli
          #. Create initial configuration file
          prutil -a create
          # Update the config file with customer, url and customer
          echo "[DEFAULT]" > $HOME/.prancer/config
          echo "server = ${{ secrets.server }}" >> $HOME/.prancer/config
          echo "spaceid = ${{ secrets.spaceid }}" >> $HOME/.prancer/config
          echo "customer = ${{ secrets.customer }}" >> $HOME/.prancer/config
          # Export username and password to get token
          export ENTCLI_KEY=${{ secrets.username }}
          export ENTCLI_SECRET='${{ secrets.password }}'
          # Get the token
          prutil -l
          # Crawl the collection
          prutil -c Test_IaC_Helm
          sleep 10
          # Run the compliance for the collection
          prutil -t Test_IaC_Helm
          sleep 10
          prutil -r Test_IaC_Helm > /tmp/results
          val=`grep failed /tmp/results`
          if [ ! -z $val ]; then
             return 1
          else
             return o
          fi
          echo Add other actions to build,
          echo test, and deploy your project.
